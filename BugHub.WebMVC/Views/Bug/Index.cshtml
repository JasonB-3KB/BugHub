@model IEnumerable<BugHub.Models.BugListItem>

@{
    ViewBag.Title = "Index";
}
<style>
    .background {
        background-size: cover;
        background-image: linear-gradient(to top, black, lightgray);
        height: 100vh;
        color: black;
        font-size: large;
    }

    a:visited {
        color: darkmagenta;
    }

    a:link {
        color: black;
    }

    a:hover {
        color: darkcyan;
    }
</style>
<h2>Bug List</h2>
<body class="background"></body>
<p>
    @Html.ActionLink("Create New Bug Tracker Ticket", "Create")
</p>
@if (TempData.ContainsKey("SaveResult"))
{
<div class="alert alert-success fade in" role="alert">
    
    <button type="button" class="close" data-dismiss="alert">
        <span>&times;</span>
    </button>
    @TempData["SaveResult"]
</div>
}
<table class="table">
    <tr>
        @*<th>
            @Html.DisplayNameFor(model => model.BugId)
        </th>*@
        <th>
            @Html.DisplayNameFor(model => model.BugTitle)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EmployeeId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CreatedUtc)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        @*<td>
            @Html.DisplayFor(modelItem => item.BugId)
        </td>*@
        <td>
            @Html.DisplayFor(modelItem => item.BugTitle)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EmployeeId, ViewData["EmployeeId"] as IEnumerableValueProvider)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CreatedUtc)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new {  id=item.BugId }) |
            @Html.ActionLink("Details", "Details", new { id = item.BugId }) |
            @Html.ActionLink("Delete", "Delete", new { id = item.BugId })
        </td>
    </tr>
}

</table>
